{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\Contact Page\\\\client\\\\src\\\\Contact.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport logo from './acexa-white.png'; // Import the image\nimport './contact.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [mailId, setMailId] = useState('');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n  const submitForm = e => {\n    e.preventDefault();\n    const userData = JSON.stringify({\n      username: username,\n      mailId: mailId,\n      subject: subject,\n      message: message\n    });\n    fetch('http://localhost:3001/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: userData\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"mailId\",\n        value: mailId,\n        onChange: e => setMailId(e.target.value),\n        placeholder: \"Your Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"subject\",\n        value: subject,\n        onChange: e => setSubject(e.target.value),\n        placeholder: \"Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"message\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        cols: \"30\",\n        rows: \"5\",\n        placeholder: \"Your Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        onClick: submitForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"S8p0zzMAcDjWrCmbF7VOY3qdzeo=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","logo","jsxDEV","_jsxDEV","Contact","_s","username","setUsername","mailId","setMailId","subject","setSubject","message","setMessage","submitForm","e","preventDefault","userData","JSON","stringify","fetch","method","headers","body","then","response","json","data","console","log","catch","error","className","children","type","name","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","cols","rows","onClick","_c","$RefreshReg$"],"sources":["D:/MERN/Contact Page/client/src/Contact.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport logo from './acexa-white.png'; // Import the image\r\nimport './contact.css';\r\n\r\nconst Contact = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [mailId, setMailId] = useState('');\r\n  const [subject, setSubject] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    const userData = JSON.stringify({\r\n        username: username,\r\n        mailId: mailId,\r\n        subject: subject,\r\n        message: message,\r\n      })\r\n    fetch('http://localhost:3001/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: userData\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      \r\n      <div className=\"form\">\r\n        <input type=\"text\" name=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Your Name\"/>\r\n        <input type=\"text\" name=\"mailId\" value={mailId} onChange={(e) => setMailId(e.target.value)} placeholder=\"Your Mail\"/>\r\n        <input type=\"text\" name=\"subject\" value={subject} onChange={(e) => setSubject(e.target.value)} placeholder=\"Subject\"/>\r\n        <textarea name=\"message\" value={message} onChange={(e) => setMessage(e.target.value)} cols=\"30\" rows=\"5\" placeholder=\"Your Message\"/>\r\n        <input type=\"submit\" value=\"Submit\" onClick={submitForm} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}